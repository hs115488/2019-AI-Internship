{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn import metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'fix_yahoo_finance'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-9-895254102a28>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mpandas_datareader\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpdr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mfix_yahoo_finance\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0myf\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0myf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpdr_override\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'fix_yahoo_finance'"
     ]
    }
   ],
   "source": [
    "from pandas_datareader import data as pdr\n",
    "import fix_yahoo_finance as yf\n",
    "yf.pdr_override()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting pandas_datareader\n",
      "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/cc/5c/ea5b6dcfd0f55c5fb1e37fb45335ec01cceca199b8a79339137f5ed269e0/pandas_datareader-0.7.0-py2.py3-none-any.whl (111kB)\n",
      "\u001b[K    100% |████████████████████████████████| 112kB 8.5MB/s ta 0:00:01\n",
      "\u001b[?25hRequirement already satisfied: wrapt in /anaconda3/lib/python3.7/site-packages (from pandas_datareader) (1.11.1)\n",
      "Requirement already satisfied: pandas>=0.19.2 in /anaconda3/lib/python3.7/site-packages (from pandas_datareader) (0.24.2)\n",
      "Requirement already satisfied: lxml in /anaconda3/lib/python3.7/site-packages (from pandas_datareader) (4.3.2)\n",
      "Requirement already satisfied: requests>=2.3.0 in /anaconda3/lib/python3.7/site-packages (from pandas_datareader) (2.21.0)\n",
      "Requirement already satisfied: pytz>=2011k in /anaconda3/lib/python3.7/site-packages (from pandas>=0.19.2->pandas_datareader) (2018.9)\n",
      "Requirement already satisfied: numpy>=1.12.0 in /anaconda3/lib/python3.7/site-packages (from pandas>=0.19.2->pandas_datareader) (1.16.2)\n",
      "Requirement already satisfied: python-dateutil>=2.5.0 in /anaconda3/lib/python3.7/site-packages (from pandas>=0.19.2->pandas_datareader) (2.8.0)\n",
      "Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /anaconda3/lib/python3.7/site-packages (from requests>=2.3.0->pandas_datareader) (3.0.4)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /anaconda3/lib/python3.7/site-packages (from requests>=2.3.0->pandas_datareader) (2019.3.9)\n",
      "Requirement already satisfied: idna<2.9,>=2.5 in /anaconda3/lib/python3.7/site-packages (from requests>=2.3.0->pandas_datareader) (2.8)\n",
      "Requirement already satisfied: urllib3<1.25,>=1.21.1 in /anaconda3/lib/python3.7/site-packages (from requests>=2.3.0->pandas_datareader) (1.24.1)\n",
      "Requirement already satisfied: six>=1.5 in /anaconda3/lib/python3.7/site-packages (from python-dateutil>=2.5.0->pandas>=0.19.2->pandas_datareader) (1.12.0)\n",
      "Installing collected packages: pandas-datareader\n",
      "Successfully installed pandas-datareader-0.7.0\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install pandas_datareader"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting talib\n",
      "  Downloading https://files.pythonhosted.org/packages/1a/80/3492aa3065d7d81a6c51db78920108f84fbe19c4e2740f6bbb83d42f77a4/talib-0.1.1.tar.gz\n",
      "Building wheels for collected packages: talib\n",
      "  Building wheel for talib (setup.py) ... \u001b[?25lerror\n",
      "  Complete output from command /anaconda3/bin/python -u -c \"import setuptools, tokenize;__file__='/private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-install-iggzorkh/talib/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-wheel-b5igzj__ --python-tag cp37:\n",
      "  running bdist_wheel\n",
      "  running build\n",
      "  running build_py\n",
      "  creating build\n",
      "  creating build/lib\n",
      "  creating build/lib/talib\n",
      "  copying talib/__init__.py -> build/lib/talib\n",
      "  copying talib/cli.py -> build/lib/talib\n",
      "  installing to build/bdist.macosx-10.7-x86_64/wheel\n",
      "  running install\n",
      "  Traceback (most recent call last):\n",
      "    File \"<string>\", line 1, in <module>\n",
      "    File \"/private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-install-iggzorkh/talib/setup.py\", line 47, in <module>\n",
      "      'talib = talib.cli:cli',\n",
      "    File \"/anaconda3/lib/python3.7/distutils/core.py\", line 148, in setup\n",
      "      dist.run_commands()\n",
      "    File \"/anaconda3/lib/python3.7/distutils/dist.py\", line 966, in run_commands\n",
      "      self.run_command(cmd)\n",
      "    File \"/anaconda3/lib/python3.7/distutils/dist.py\", line 985, in run_command\n",
      "      cmd_obj.run()\n",
      "    File \"/anaconda3/lib/python3.7/site-packages/wheel/bdist_wheel.py\", line 228, in run\n",
      "      self.run_command('install')\n",
      "    File \"/anaconda3/lib/python3.7/distutils/cmd.py\", line 313, in run_command\n",
      "      self.distribution.run_command(command)\n",
      "    File \"/anaconda3/lib/python3.7/distutils/dist.py\", line 985, in run_command\n",
      "      cmd_obj.run()\n",
      "    File \"/private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-install-iggzorkh/talib/setup.py\", line 20, in run\n",
      "      raise Exception(\"You probably meant to install and run ta-lib\")\n",
      "  Exception: You probably meant to install and run ta-lib\n",
      "  \n",
      "  ----------------------------------------\n",
      "\u001b[31m  Failed building wheel for talib\u001b[0m\n",
      "\u001b[?25h  Running setup.py clean for talib\n",
      "Failed to build talib\n",
      "Installing collected packages: talib\n",
      "  Running setup.py install for talib ... \u001b[?25lerror\n",
      "    Complete output from command /anaconda3/bin/python -u -c \"import setuptools, tokenize;__file__='/private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-install-iggzorkh/talib/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-record-zzpj9w42/install-record.txt --single-version-externally-managed --compile:\n",
      "    running install\n",
      "    Traceback (most recent call last):\n",
      "      File \"<string>\", line 1, in <module>\n",
      "      File \"/private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-install-iggzorkh/talib/setup.py\", line 47, in <module>\n",
      "        'talib = talib.cli:cli',\n",
      "      File \"/anaconda3/lib/python3.7/distutils/core.py\", line 148, in setup\n",
      "        dist.run_commands()\n",
      "      File \"/anaconda3/lib/python3.7/distutils/dist.py\", line 966, in run_commands\n",
      "        self.run_command(cmd)\n",
      "      File \"/anaconda3/lib/python3.7/distutils/dist.py\", line 985, in run_command\n",
      "        cmd_obj.run()\n",
      "      File \"/private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-install-iggzorkh/talib/setup.py\", line 20, in run\n",
      "        raise Exception(\"You probably meant to install and run ta-lib\")\n",
      "    Exception: You probably meant to install and run ta-lib\n",
      "    \n",
      "    ----------------------------------------\n",
      "\u001b[31mCommand \"/anaconda3/bin/python -u -c \"import setuptools, tokenize;__file__='/private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-install-iggzorkh/talib/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-record-zzpj9w42/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-install-iggzorkh/talib/\u001b[0m\n",
      "\u001b[?25hNote: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install talib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting fix_yahoo_finance\n",
      "  Downloading https://files.pythonhosted.org/packages/a5/f3/aba3b563452faaea71b4161754991e3143751ec9141d83c4bce05992332a/fix-yahoo-finance-0.1.37.tar.gz\n",
      "    Complete output from command python setup.py egg_info:\n",
      "    Traceback (most recent call last):\n",
      "      File \"<string>\", line 1, in <module>\n",
      "      File \"/private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-install-9xxm9kir/fix-yahoo-finance/setup.py\", line 19, in <module>\n",
      "        from fix_yahoo_finance import __version__\n",
      "      File \"/private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-install-9xxm9kir/fix-yahoo-finance/fix_yahoo_finance/__init__.py\", line 22, in <module>\n",
      "        import yfinance\n",
      "    ModuleNotFoundError: No module named 'yfinance'\n",
      "    \n",
      "    ----------------------------------------\n",
      "\u001b[31mCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/hx/9j5wjgkj1c58wjqh8z7k36580000gp/T/pip-install-9xxm9kir/fix-yahoo-finance/\u001b[0m\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install fix_yahoo_finance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"Stocks.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>241.970001</td>\n",
       "      <td>243.360001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>243.419998</td>\n",
       "      <td>244.169998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>243.970001</td>\n",
       "      <td>243.990005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>243.339996</td>\n",
       "      <td>243.210007</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>243.600006</td>\n",
       "      <td>243.660004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>243.770004</td>\n",
       "      <td>243.779999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>244.089996</td>\n",
       "      <td>243.410004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>243.130005</td>\n",
       "      <td>243.360001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>243.979996</td>\n",
       "      <td>244.550003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>244.860001</td>\n",
       "      <td>244.240005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>242.679993</td>\n",
       "      <td>243.770004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>242.770004</td>\n",
       "      <td>242.639999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>243.589996</td>\n",
       "      <td>244.660004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>244.250000</td>\n",
       "      <td>243.009995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>243.460007</td>\n",
       "      <td>242.949997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>242.960007</td>\n",
       "      <td>242.839996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>242.910004</td>\n",
       "      <td>243.130005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>243.899994</td>\n",
       "      <td>243.289993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>243.039993</td>\n",
       "      <td>241.330002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>242.500000</td>\n",
       "      <td>243.490005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>243.660004</td>\n",
       "      <td>241.350006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>242.279999</td>\n",
       "      <td>241.800003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>242.880005</td>\n",
       "      <td>242.210007</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>242.630005</td>\n",
       "      <td>242.770004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>241.889999</td>\n",
       "      <td>240.550003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>241.210007</td>\n",
       "      <td>242.110001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>242.110001</td>\n",
       "      <td>242.369995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>242.369995</td>\n",
       "      <td>242.190002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>243.300003</td>\n",
       "      <td>244.009995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>244.020004</td>\n",
       "      <td>244.419998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>269.649994</td>\n",
       "      <td>268.890015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>268.809998</td>\n",
       "      <td>266.609985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>224</th>\n",
       "      <td>267.260010</td>\n",
       "      <td>266.570007</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225</th>\n",
       "      <td>267.730011</td>\n",
       "      <td>262.980011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>226</th>\n",
       "      <td>262.910004</td>\n",
       "      <td>263.630005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>264.790009</td>\n",
       "      <td>266.309998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>267.000000</td>\n",
       "      <td>266.559998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>229</th>\n",
       "      <td>267.260010</td>\n",
       "      <td>264.510010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230</th>\n",
       "      <td>263.869995</td>\n",
       "      <td>264.980011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>264.760010</td>\n",
       "      <td>263.200012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>262.260010</td>\n",
       "      <td>262.619995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233</th>\n",
       "      <td>261.519989</td>\n",
       "      <td>266.019989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>266.890015</td>\n",
       "      <td>266.920013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>266.500000</td>\n",
       "      <td>266.920013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>267.679993</td>\n",
       "      <td>269.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>270.339996</td>\n",
       "      <td>272.019989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>272.160004</td>\n",
       "      <td>272.850006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>273.339996</td>\n",
       "      <td>272.980011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>271.589996</td>\n",
       "      <td>271.100006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>271.140015</td>\n",
       "      <td>272.239990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>271.940002</td>\n",
       "      <td>272.010010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>271.619995</td>\n",
       "      <td>271.329987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>273.010010</td>\n",
       "      <td>273.369995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>273.959991</td>\n",
       "      <td>272.609985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>271.170013</td>\n",
       "      <td>273.359985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>272.910004</td>\n",
       "      <td>272.799988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>272.149994</td>\n",
       "      <td>272.149994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>270.309998</td>\n",
       "      <td>269.019989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>270.500000</td>\n",
       "      <td>272.609985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>272.149994</td>\n",
       "      <td>270.940002</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>252 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Open       Close\n",
       "0    241.970001  243.360001\n",
       "1    243.419998  244.169998\n",
       "2    243.970001  243.990005\n",
       "3    243.339996  243.210007\n",
       "4    243.600006  243.660004\n",
       "5    243.770004  243.779999\n",
       "6    244.089996  243.410004\n",
       "7    243.130005  243.360001\n",
       "8    243.979996  244.550003\n",
       "9    244.860001  244.240005\n",
       "10   242.679993  243.770004\n",
       "11   242.770004  242.639999\n",
       "12   243.589996  244.660004\n",
       "13   244.250000  243.009995\n",
       "14   243.460007  242.949997\n",
       "15   242.960007  242.839996\n",
       "16   242.910004  243.130005\n",
       "17   243.899994  243.289993\n",
       "18   243.039993  241.330002\n",
       "19   242.500000  243.490005\n",
       "20   243.660004  241.350006\n",
       "21   242.279999  241.800003\n",
       "22   242.880005  242.210007\n",
       "23   242.630005  242.770004\n",
       "24   241.889999  240.550003\n",
       "25   241.210007  242.110001\n",
       "26   242.110001  242.369995\n",
       "27   242.369995  242.190002\n",
       "28   243.300003  244.009995\n",
       "29   244.020004  244.419998\n",
       "..          ...         ...\n",
       "222  269.649994  268.890015\n",
       "223  268.809998  266.609985\n",
       "224  267.260010  266.570007\n",
       "225  267.730011  262.980011\n",
       "226  262.910004  263.630005\n",
       "227  264.790009  266.309998\n",
       "228  267.000000  266.559998\n",
       "229  267.260010  264.510010\n",
       "230  263.869995  264.980011\n",
       "231  264.760010  263.200012\n",
       "232  262.260010  262.619995\n",
       "233  261.519989  266.019989\n",
       "234  266.890015  266.920013\n",
       "235  266.500000  266.920013\n",
       "236  267.679993  269.500000\n",
       "237  270.339996  272.019989\n",
       "238  272.160004  272.850006\n",
       "239  273.339996  272.980011\n",
       "240  271.589996  271.100006\n",
       "241  271.140015  272.239990\n",
       "242  271.940002  272.010010\n",
       "243  271.619995  271.329987\n",
       "244  273.010010  273.369995\n",
       "245  273.959991  272.609985\n",
       "246  271.170013  273.359985\n",
       "247  272.910004  272.799988\n",
       "248  272.149994  272.149994\n",
       "249  270.309998  269.019989\n",
       "250  270.500000  272.609985\n",
       "251  272.149994  270.940002\n",
       "\n",
       "[252 rows x 2 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2017-06-01</th>\n",
       "      <td>243.380005</td>\n",
       "      <td>241.639999</td>\n",
       "      <td>241.970001</td>\n",
       "      <td>243.360001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-06-02</th>\n",
       "      <td>244.350006</td>\n",
       "      <td>243.080002</td>\n",
       "      <td>243.419998</td>\n",
       "      <td>244.169998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-06-05</th>\n",
       "      <td>244.300003</td>\n",
       "      <td>243.759995</td>\n",
       "      <td>243.970001</td>\n",
       "      <td>243.990005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-06-06</th>\n",
       "      <td>243.979996</td>\n",
       "      <td>243.119995</td>\n",
       "      <td>243.339996</td>\n",
       "      <td>243.210007</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-06-07</th>\n",
       "      <td>243.919998</td>\n",
       "      <td>242.830002</td>\n",
       "      <td>243.600006</td>\n",
       "      <td>243.660004</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  High         Low        Open       Close\n",
       "Date                                                      \n",
       "2017-06-01  243.380005  241.639999  241.970001  243.360001\n",
       "2017-06-02  244.350006  243.080002  243.419998  244.169998\n",
       "2017-06-05  244.300003  243.759995  243.970001  243.990005\n",
       "2017-06-06  243.979996  243.119995  243.339996  243.210007\n",
       "2017-06-07  243.919998  242.830002  243.600006  243.660004"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pdr.get_data_yahoo('SPY','06-01-2017','05-31-2018')\n",
    "df = df.dropna()\n",
    "df = df.iloc[:,:4]\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['S_10'] = df['Close'].rolling(window=10).mean()\n",
    "df['Corr'] = df['Close'].rolling(window=10).corr(df['S_10'])\n",
    "df['Open-Close'] = df['Open'] - df['Open'].shift(1)\n",
    "df = df.dropna()\n",
    "x = df.iloc[:,:9]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "y = np.where (df['Close'].shift(-1) > df[\"Close\"],1,-1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "split = int(0.7*len(df))\n",
    "X_train, x_test, y_train, y_test = x[:split],x[split:],y[:split],y[split:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/logistic.py:433: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
      "  FutureWarning)\n"
     ]
    }
   ],
   "source": [
    "model = LogisticRegression()\n",
    "model = model.fit (X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>High</td>\n",
       "      <td>[-0.4075333771243388]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Low</td>\n",
       "      <td>[-0.11266042919020022]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Open</td>\n",
       "      <td>[0.387316475392922]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Close</td>\n",
       "      <td>[0.03347075979645739]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>S_10</td>\n",
       "      <td>[0.10250679809595]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Corr</td>\n",
       "      <td>[-0.11263576606586567]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Open-Close</td>\n",
       "      <td>[0.007377664852098902]</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            0                       1\n",
       "0        High   [-0.4075333771243388]\n",
       "1         Low  [-0.11266042919020022]\n",
       "2        Open     [0.387316475392922]\n",
       "3       Close   [0.03347075979645739]\n",
       "4        S_10      [0.10250679809595]\n",
       "5        Corr  [-0.11263576606586567]\n",
       "6  Open-Close  [0.007377664852098902]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(zip(x.columns, np.transpose(model.coef_)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0.61550287 0.38449713]\n",
      " [0.49979985 0.50020015]\n",
      " [0.57024059 0.42975941]\n",
      " [0.56679212 0.43320788]\n",
      " [0.44495333 0.55504667]\n",
      " [0.33878968 0.66121032]\n",
      " [0.32698478 0.67301522]\n",
      " [0.47670084 0.52329916]\n",
      " [0.65092869 0.34907131]\n",
      " [0.27005702 0.72994298]\n",
      " [0.48613314 0.51386686]\n",
      " [0.32071088 0.67928912]\n",
      " [0.61930579 0.38069421]\n",
      " [0.48433592 0.51566408]\n",
      " [0.43304728 0.56695272]\n",
      " [0.35725414 0.64274586]\n",
      " [0.37333559 0.62666441]\n",
      " [0.36004848 0.63995152]\n",
      " [0.25553424 0.74446576]\n",
      " [0.25141263 0.74858737]\n",
      " [0.39510537 0.60489463]\n",
      " [0.19270672 0.80729328]\n",
      " [0.13354482 0.86645518]\n",
      " [0.34574814 0.65425186]\n",
      " [0.19215214 0.80784786]\n",
      " [0.31213804 0.68786196]\n",
      " [0.55885188 0.44114812]\n",
      " [0.19604533 0.80395467]\n",
      " [0.38598653 0.61401347]\n",
      " [0.82030768 0.17969232]\n",
      " [0.43635901 0.56364099]\n",
      " [0.38775963 0.61224037]\n",
      " [0.59981281 0.40018719]\n",
      " [0.47127011 0.52872989]\n",
      " [0.52928385 0.47071615]\n",
      " [0.50729827 0.49270173]\n",
      " [0.32826827 0.67173173]\n",
      " [0.47097201 0.52902799]\n",
      " [0.54983874 0.45016126]\n",
      " [0.4773389  0.5226611 ]\n",
      " [0.38402109 0.61597891]\n",
      " [0.32529015 0.67470985]\n",
      " [0.33062084 0.66937916]\n",
      " [0.22709324 0.77290676]\n",
      " [0.26930799 0.73069201]\n",
      " [0.44434276 0.55565724]\n",
      " [0.27513265 0.72486735]\n",
      " [0.29363792 0.70636208]\n",
      " [0.29199694 0.70800306]\n",
      " [0.32266864 0.67733136]\n",
      " [0.27725346 0.72274654]\n",
      " [0.69250763 0.30749237]\n",
      " [0.41898017 0.58101983]\n",
      " [0.36340961 0.63659039]\n",
      " [0.52256916 0.47743084]\n",
      " [0.57477884 0.42522116]\n",
      " [0.50070915 0.49929085]\n",
      " [0.48888519 0.51111481]\n",
      " [0.35138333 0.64861667]\n",
      " [0.50309958 0.49690042]\n",
      " [0.44909107 0.55090893]\n",
      " [0.34774083 0.65225917]\n",
      " [0.41574827 0.58425173]\n",
      " [0.33542839 0.66457161]\n",
      " [0.46238826 0.53761174]\n",
      " [0.28057726 0.71942274]\n",
      " [0.34448939 0.65551061]\n",
      " [0.28623084 0.71376916]\n",
      " [0.48467113 0.51532887]\n",
      " [0.28714082 0.71285918]\n",
      " [0.43267492 0.56732508]]\n"
     ]
    }
   ],
   "source": [
    "probability = model.predict_proba(x_test)\n",
    "print(probability)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "predicted = model.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 5 31]\n",
      " [11 24]]\n"
     ]
    }
   ],
   "source": [
    "print(metrics.confusion_matrix(y_test,predicted))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "          -1       0.31      0.14      0.19        36\n",
      "           1       0.44      0.69      0.53        35\n",
      "\n",
      "   micro avg       0.41      0.41      0.41        71\n",
      "   macro avg       0.37      0.41      0.36        71\n",
      "weighted avg       0.37      0.41      0.36        71\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(metrics.classification_report(y_test,predicted))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.4084507042253521\n"
     ]
    }
   ],
   "source": [
    "print(model.score(x_test,y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-44-adbe6a4c8dfc>, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-44-adbe6a4c8dfc>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    print(cross_val)\u001b[0m\n\u001b[0m        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "cross_val = cross_val_score(LogisiticRegression(),x,y, scoring='accuracy', cv=10\n",
    "print(cross_val)\n",
    "print(cross_val.mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
